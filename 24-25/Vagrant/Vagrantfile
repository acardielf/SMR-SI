# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "web" do |web|
    web.vm.box = "ubuntu/bionic64"
    web.vm.hostname = "web"
    web.vm.network "private_network", ip: "192.168.56.101"

    if Vagrant.has_plugin?("vagrant-vbguest")
      web.vbguest.auto_update = false
    end

    web.vm.provision "file", source: "_scripts/user.sh", destination: "/home/vagrant/user.sh"
    web.vm.provision "shell", inline: "sudo bash /home/vagrant/user.sh"
  

    web.vm.provision "file", source: "_scripts/apache2.sh", destination: "/home/vagrant/apache2.sh"
    web.vm.provision "shell", inline: "sudo bash /home/vagrant/apache2.sh"


    web.vm.provision "file", source: "_scripts/fail2ban.sh", destination: "/home/vagrant/fail2ban.sh"
    web.vm.provision "shell", inline: "sudo bash /home/vagrant/fail2ban.sh"

    web.vm.provision "file", source: "_scripts/firewall_web.sh", destination: "/home/vagrant/firewall_web.sh"
    web.vm.provision "shell", inline: "sudo bash /home/vagrant/firewall_web.sh"

  end

  config.vm.define "db" do |db|
    db.vm.box = "ubuntu/bionic64"
    db.vm.hostname = "db"  
    db.vm.network "private_network", ip: "192.168.56.102"

    if Vagrant.has_plugin?("vagrant-vbguest")
      db.vbguest.auto_update = false
    end

    db.vm.provision "file", source: "_scripts/user.sh", destination: "/home/vagrant/user.sh"
    db.vm.provision "shell", inline: "sudo bash /home/vagrant/user.sh"
    
    db.vm.provision "file", source: "_scripts/database.sh", destination: "/home/vagrant/database.sh"
    db.vm.provision "shell", inline: "sudo bash /home/vagrant/database.sh"

    db.vm.provision "file", source: "_scripts/firewall_db.sh", destination: "/home/vagrant/firewall_db.sh"
    db.vm.provision "shell", inline: "sudo bash /home/vagrant/firewall_db.sh"

  end 
    
end
